// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/app/interfaces.go

// Package app is a generated GoMock package.
package app

import (
	reflect "reflect"

	models "github.com/diazharizky/use-case-go-jwt-auth-service/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIGenerateJWTTokenService is a mock of IGenerateJWTTokenService interface.
type MockIGenerateJWTTokenService struct {
	ctrl     *gomock.Controller
	recorder *MockIGenerateJWTTokenServiceMockRecorder
}

// MockIGenerateJWTTokenServiceMockRecorder is the mock recorder for MockIGenerateJWTTokenService.
type MockIGenerateJWTTokenServiceMockRecorder struct {
	mock *MockIGenerateJWTTokenService
}

// NewMockIGenerateJWTTokenService creates a new mock instance.
func NewMockIGenerateJWTTokenService(ctrl *gomock.Controller) *MockIGenerateJWTTokenService {
	mock := &MockIGenerateJWTTokenService{ctrl: ctrl}
	mock.recorder = &MockIGenerateJWTTokenServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGenerateJWTTokenService) EXPECT() *MockIGenerateJWTTokenServiceMockRecorder {
	return m.recorder
}

// Call mocks base method.
func (m *MockIGenerateJWTTokenService) Call(payload models.UserData) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Call", payload)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Call indicates an expected call of Call.
func (mr *MockIGenerateJWTTokenServiceMockRecorder) Call(payload interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Call", reflect.TypeOf((*MockIGenerateJWTTokenService)(nil).Call), payload)
}

// MockIValidateJWTTokenService is a mock of IValidateJWTTokenService interface.
type MockIValidateJWTTokenService struct {
	ctrl     *gomock.Controller
	recorder *MockIValidateJWTTokenServiceMockRecorder
}

// MockIValidateJWTTokenServiceMockRecorder is the mock recorder for MockIValidateJWTTokenService.
type MockIValidateJWTTokenServiceMockRecorder struct {
	mock *MockIValidateJWTTokenService
}

// NewMockIValidateJWTTokenService creates a new mock instance.
func NewMockIValidateJWTTokenService(ctrl *gomock.Controller) *MockIValidateJWTTokenService {
	mock := &MockIValidateJWTTokenService{ctrl: ctrl}
	mock.recorder = &MockIValidateJWTTokenServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIValidateJWTTokenService) EXPECT() *MockIValidateJWTTokenServiceMockRecorder {
	return m.recorder
}

// Call mocks base method.
func (m *MockIValidateJWTTokenService) Call(tokenString string) (bool, *models.JWTClaims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Call", tokenString)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(*models.JWTClaims)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Call indicates an expected call of Call.
func (mr *MockIValidateJWTTokenServiceMockRecorder) Call(tokenString interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Call", reflect.TypeOf((*MockIValidateJWTTokenService)(nil).Call), tokenString)
}
